<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.0.xsd
     http://www.springframework.org/schema/task
      http://www.springframework.org/schema/task/spring-task.xsd">


    <bean id="demoServiceBasicUsageFixedDelay" class="com.amir.web.service.DemoServiceBasicUsageFixedDelay">
        <description>
            This bean is responsible for executing the purpose of schedule task
        </description>
    </bean>


    <bean id="dataSource" class="com.amir.web.DAO.CustomDriverManagerDataSource" >
        <description>
            Extending DriverManagerDataSource class in order to decode BASE64 password
        </description>
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <context:property-placeholder location="classpath:database/database.properties"/>

    <!-- Spring's scheduling support-->
    <!--task:scheduled-tasks scheduler="taskScheduler">
        <task:scheduled ref="fixedDelayService" method="demoServiceMethod" fixed-delay="50000"/>
    </task:scheduled-tasks-->

    <bean id="fixedDelayService" class="com.amir.web.service.DemoServiceBasicUsageFixedDelay" >
        <description>
            The bean that does the actual work
        </description>
    </bean>

    <!-- Defines a ThreadPoolTaskScheduler instance with configurable pool size. -->
    <task:scheduler id="taskScheduler" pool-size="1"/>

    <bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <description>
            Configure bean to convert JSON to POJO and vice versa
        </description>
    </bean>
    <bean id="template" class="org.springframework.web.client.RestTemplate"/>
</beans>